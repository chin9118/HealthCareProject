<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-08-23T18:49:41 AEST" name="Suite" finished-at="2023-08-23T18:50:07 AEST" duration-ms="26132">
    <groups>
      <group name="group2">
        <method signature="LoginPageTestClass.unsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" name="unsuccessfulLogin" class="executePageClasses.LoginPageTestClass"/>
        <method signature="LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" name="verifySuccessfulLogin" class="executePageClasses.LoginPageTestClass"/>
      </group> <!-- group2 -->
      <group name="group1">
        <method signature="LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" class="executePageClasses.LoginPageTestClass"/>
        <method signature="HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" name="verifyTheLogoIsDisplayedOrNotInHomePage" class="executePageClasses.HomePageTestClass"/>
      </group> <!-- group1 -->
    </groups>
    <test started-at="2023-08-23T18:49:41 AEST" name="Test2" finished-at="2023-08-23T18:50:00 AEST" duration-ms="19031">
      <class name="executePageClasses.HomePageTestClass">
        <test-method is-config="true" signature="createExtendReport(org.testng.ITestContext)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" started-at="2023-08-23T18:49:41 AEST" name="createExtendReport" finished-at="2023-08-23T18:49:41 AEST" duration-ms="567" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@bff34c6]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createExtendReport -->
        <test-method signature="verifyAllTilesAreDisplayed(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" started-at="2023-08-23T18:49:42 AEST" name="verifyAllTilesAreDisplayed" data-provider="loginsuccessful" finished-at="2023-08-23T18:49:42 AEST" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.io.IOException: Stream Closed]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.io.IOException: Stream Closed
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:57)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
at org.testng.internal.Parameters.handleParameters(Parameters.java:803)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: java.io.IOException: Stream Closed
at java.base/java.io.FileInputStream.available0(Native Method)
at java.base/java.io.FileInputStream.available(FileInputStream.java:330)
at java.base/java.io.BufferedInputStream.read(BufferedInputStream.java:359)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:133)
at java.base/java.io.PushbackInputStream.read(PushbackInputStream.java:183)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:107)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.fill(ZipArchiveInputStream.java:861)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readFromInflater(ZipArchiveInputStream.java:650)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.readDeflated(ZipArchiveInputStream.java:625)
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.read(ZipArchiveInputStream.java:528)
at java.base/java.io.FilterInputStream.read(FilterInputStream.java:133)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.read(ZipArchiveThresholdInputStream.java:80)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:240)
at org.apache.poi.util.IOUtils.toByteArray(IOUtils.java:203)
at org.apache.poi.openxml4j.util.ZipArchiveFakeEntry.<init>(ZipArchiveFakeEntry.java:82)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:98)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at Utilities.ExcelRead.getStringData(ExcelRead.java:19)
at executePageClasses.DataProviderClass.dp1(DataProviderClass.java:24)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:53)
... 19 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyAllTilesAreDisplayed -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" started-at="2023-08-23T18:49:43 AEST" name="beforeMethod" finished-at="2023-08-23T18:49:57 AEST" duration-ms="13587" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[edge]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" started-at="2023-08-23T18:49:57 AEST" name="verifyTheLogoIsDisplayedOrNotInHomePage" data-provider="loginsuccessful" finished-at="2023-08-23T18:50:00 AEST" duration-ms="3214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheLogoIsDisplayedOrNotInHomePage -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d]" started-at="2023-08-23T18:50:00 AEST" name="afterMethod" finished-at="2023-08-23T18:50:00 AEST" duration-ms="504" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheLogoIsDisplayedOrNotInHomePage status=SUCCESS method=HomePageTestClass.verifyTheLogoIsDisplayedOrNotInHomePage(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.HomePageTestClass@34bde49d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.HomePageTestClass -->
    </test> <!-- Test2 -->
    <test started-at="2023-08-23T18:49:41 AEST" name="Test1" finished-at="2023-08-23T18:50:07 AEST" duration-ms="26132">
      <class name="executePageClasses.LoginPageTestClass">
        <test-method signature="unsuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:49:42 AEST" name="unsuccessfulLogin" data-provider="login" finished-at="2023-08-23T18:49:42 AEST" duration-ms="0" status="FAIL">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException: No valid entries or contents found, this is not a valid OOXML (Office Open XML) file]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException: No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:57)
at org.testng.internal.invokers.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:157)
at org.testng.internal.Parameters.handleParameters(Parameters.java:803)
at org.testng.internal.Parameters.handleParameters(Parameters.java:728)
at org.testng.internal.invokers.ParameterHandler.handleParameters(ParameterHandler.java:72)
at org.testng.internal.invokers.ParameterHandler.createParameters(ParameterHandler.java:51)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:924)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:829)
at org.testng.TestRunner.run(TestRunner.java:602)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:475)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
Caused by: org.apache.poi.openxml4j.exceptions.NotOfficeXmlFileException: No valid entries or contents found, this is not a valid OOXML (Office Open XML) file
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:156)
at org.apache.poi.openxml4j.util.ZipInputStreamZipEntrySource.<init>(ZipInputStreamZipEntrySource.java:94)
at org.apache.poi.openxml4j.opc.ZipPackage.<init>(ZipPackage.java:132)
at org.apache.poi.openxml4j.opc.OPCPackage.open(OPCPackage.java:319)
at org.apache.poi.ooxml.util.PackageHelper.open(PackageHelper.java:59)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:290)
at org.apache.poi.xssf.usermodel.XSSFWorkbook.<init>(XSSFWorkbook.java:286)
at Utilities.ExcelRead.getStringData(ExcelRead.java:19)
at executePageClasses.DataProviderClass.dp(DataProviderClass.java:15)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:84)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:53)
... 19 more
Caused by: java.util.zip.ZipException: Unexpected record signature: 0X3A84F9F7
at org.apache.commons.compress.archivers.zip.ZipArchiveInputStream.getNextZipEntry(ZipArchiveInputStream.java:296)
at org.apache.poi.openxml4j.util.ZipArchiveThresholdInputStream.getNextEntry(ZipArchiveThresholdInputStream.java:152)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- unsuccessfulLogin -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:49:43 AEST" name="beforeMethod" finished-at="2023-08-23T18:49:53 AEST" duration-ms="10479" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:49:53 AEST" name="verifySuccessfulLogin" data-provider="loginsuccessful" finished-at="2023-08-23T18:49:56 AEST" duration-ms="2709" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[admin]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Admin123]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySuccessfulLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:49:56 AEST" name="afterMethod" finished-at="2023-08-23T18:49:57 AEST" duration-ms="599" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifySuccessfulLogin status=SUCCESS method=LoginPageTestClass.verifySuccessfulLogin(java.lang.String,java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.String)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:49:57 AEST" name="beforeMethod" finished-at="2023-08-23T18:50:07 AEST" duration-ms="10212" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:50:07 AEST" name="verifyTheCorrectSiteIsLoadedWhileHittingTheURL" finished-at="2023-08-23T18:50:07 AEST" duration-ms="71" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyTheCorrectSiteIsLoadedWhileHittingTheURL -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:executePageClasses.LoginPageTestClass@433defed]" started-at="2023-08-23T18:50:07 AEST" name="afterMethod" finished-at="2023-08-23T18:50:07 AEST" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verifyTheCorrectSiteIsLoadedWhileHittingTheURL status=SUCCESS method=LoginPageTestClass.verifyTheCorrectSiteIsLoadedWhileHittingTheURL()[pri:0, instance:executePageClasses.LoginPageTestClass@433defed] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- executePageClasses.LoginPageTestClass -->
    </test> <!-- Test1 -->
  </suite> <!-- Suite -->
</testng-results>
